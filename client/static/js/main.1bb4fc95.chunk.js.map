{"version":3,"sources":["components/array/validate.js","components/array/FieldArraysForm.js","components/array/showResults.js","components/array/store.js","components/array/indexer.js","components/FinalQuizItem.js","components/Assessment.js","components/MakeColumns.js","components/ExcelReader.js","components/FinalQuizAdd.js","components/FinalQuizDetails.js","components/Image.js","components/answer/Answer.js","components/question/Question.js","components/QuizDetails.js","components/voice/validate.js","components/voice/FieldArraysForm.js","components/voice/showResults.js","components/voice/store.js","components/voice/indexer.js","components/voice/views/keywords.jsx","components/voice/views/speaker.jsx","components/voice/views/transcript.jsx","components/voice/views/demo.jsx","components/voice/VoiceAssessmentItem.js","components/voice/VoiceAssessment.js","components/voice/VoiceQuizDetails.js","components/Main.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["validate","values","errors","name","questions","length","questionsArrayErrors","forEach","question","questionIndex","questionErrors","undefined","correct_answer","isNaN","answers","optionArrayErrors","answer","answerIndex","_error","renderCount","input","label","type","meta","touched","error","value","Math","floor","random","renderField","placeholder","renderAnswers","fields","onClick","push","map","index","key","title","remove","Field","component","className","renderQuestions","submitFailed","FieldArray","reduxForm","form","props","handleSubmit","pristine","reset","submitting","axios","get","then","response","data","count","onSubmit","disabled","a","request","method","url","lang","id","localStorage","setItem","alert","window","opener","open","close","catch","err","console","log","reducer","combineReducers","reduxFormReducer","store","devToolsExtension","createStore","Indexer","style","padding","showResults","Component","FinalQuizItem","state","item","this","to","Assessment","quiz","mcq","getAssessments","setState","meetupItems","meetup","i","mcqID","make_cols","refstr","o","C","XLSX","utils","decode_range","e","c","encode_col","sleep","ms","Promise","resolve","setTimeout","SheetJSFT","x","join","ExcelReader","file","cols","newData","finalData","voicedata","finalVoiceData","newVoiceData","handleFile","bind","handleChange","handleInputChange","files","target","reader","FileReader","rABS","readAsBinaryString","onload","bstr","result","wb","read","bookVBA","ws","Sheets","sheet_to_json","len","Option1","Option2","Option3","Option4","addMCQQuiz","wsvoice","keywords","addVoiceQuiz","addFinalQuiz","readAsArrayBuffer","document","getElementById","innerHTML","finalQuiz","getItem","removeItem","location","replace","voiceID","color","download","Label","htmlFor","ref","onChange","accept","FinalQuizAdd","proceed","onClick1","btn","setAttribute","btn1","required","pathname","FinalQuizDetails","quizId","match","params","float","Image","baseString","imageToBase","ids","sessionStorage","quizID","onloadend","readAsDataURL","Example","src","Answer","Object","keys","qAnswer","Number","clickedAnswer","checkAnswer","Question","QuizDetails","quiestions","totalTime","correctAnswers","correctAnswer","step","score","details","minutes","seconds","showLoader","nextStep","getQuiz","setTime","clearInterval","myInterval","setInterval","setQuestion","width","align","test","height","VoiceIndexer","URL","substring","lastIndexOf","initialValues","allResultsReducer","list","message","concat","results","keywordReducer","keywords_result","k","getSpotted","messages","reduce","Keywords","isInProgress","notSpotted","notSpottedIcon","spotted","spottings","size","s","start_time","end_time","round","confidence","getKeywordsSummary","total","sum","SpeakersView","msg","result_index","speaker","alternatives","transcript","b","ex","Transcript","Demo","model","rawMessages","formattedMessages","audioSource","speakerLabels","getKeywords","settingsAtStreamStart","questionkey","setKeywords","handleSampleClick","handleSample1Click","handleSample2Click","captureSettings","stopTranscription","getRecognizeOptions","isNarrowBand","handleMicClick","handleUploadClick","handleUserFile","handleUserFileRejection","playFile","handleStream","handleRawMessage","handleFormattedMessage","handleTranscriptEnd","handleModelChange","supportsSpeakerLabels","handleSpeakerLabelsChange","handleKeywordsChange","getKeywordsArr","getKeywordsArrUnique","getFinalResults","getCurrentInterimResult","getFinalAndLatestInterimResult","handleError","stream","stop","extra","assign","access_token","accessToken","token","smart_formatting","format","objectMode","interim_results","word_alternatives_threshold","keywords_threshold","timestamps","speaker_labels","resultsBySpeaker","speakerlessInterim","serviceUrl","indexOf","recognizeMicrophone","dropzone","updateSession","which","filename","samples","recognizeFile","play","realtime","removeAllListeners","recognizeStream","on","frame","json","sent","once","binary","code","fetchToken","datal","tokenInterval","fetch","res","status","Error","creds","cachedModels","some","m","supported_features","prevState","split","trim","filter","self","r","final","interim","micIconFill","micButtonClass","isSupported","onDropAccepted","onDropRejected","maxSize","disableClick","activeClassName","rejectClassName","node","onLoad","fill","VoiceAssessmentItem","VoiceAssessment","meetups","getVoiceQuiz","VoiceQuizDetails","onClose","check","meetupId","delete","history","Main","exact","path","Navbar","href","data-target","App","Boolean","hostname","require","config","silent","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1bb4fc95.chunk.js","sourcesContent":["const validate = values => {\r\n  const errors = {}\r\n  if (!values.name) {\r\n    errors.name = 'Required'\r\n  }\r\n  if (!values.questions || !values.questions.length) {\r\n    errors.questions = { _error: 'At least one question must be entered' }\r\n  } else {\r\n    const questionsArrayErrors = []\r\n    values.questions.forEach((question, questionIndex) => {\r\n      const questionErrors = {}\r\n      if (!question || !question.question || question.question === undefined) {\r\n        questionErrors.question = 'Required'\r\n        questionsArrayErrors[questionIndex] = questionErrors\r\n      }\r\n      if (!question || !question.correct_answer) {\r\n        questionErrors.correct_answer = 'Required'\r\n        questionsArrayErrors[questionIndex] = questionErrors\r\n      } else if (isNaN(question.correct_answer)) {\r\n        questionErrors.correct_answer = 'Correct option should be number'\r\n        questionsArrayErrors[questionIndex] = questionErrors\r\n      }\r\n      if (!question.answers || !question.answers.length) {\r\n        errors.questions = { _error: 'At least one option must be entered' }\r\n      }\r\n      else if (question && question.answers && question.answers.length) {\r\n        const optionArrayErrors = []\r\n        question.answers.forEach((answer, answerIndex) => {\r\n          if (!answer || !answer.length) {\r\n            optionArrayErrors[answerIndex] = 'Required'\r\n          }\r\n        })\r\n        if (optionArrayErrors.length) {\r\n          questionErrors.answers = optionArrayErrors\r\n          questionsArrayErrors[questionIndex] = questionErrors\r\n        }\r\n\r\n      }\r\n\r\n    })\r\n    if (questionsArrayErrors.length) {\r\n      errors.questions = questionsArrayErrors\r\n    }\r\n  }\r\n  return errors\r\n}\r\n\r\nexport default validate\r\n","import axios from 'axios';\nimport React from 'react';\nimport { Field, FieldArray, reduxForm } from 'redux-form';\nimport validate from './validate';\n\n\n\n\nconst getCount = (id) => (\n  axios.get(`/api/quizzes/count`).then(response => {\n    id = response.data.count;\n    return id;\n  })\n);\nconst renderCount = ({ input, label, type, meta: { touched, error } }) => (\n  <div>\n    <label>{label}</label>\n    <div>\n      <input type=\"hidden\" value={Math.floor(Math.random() * 100) + 1} />\n      {touched && error && <span>{error}</span>}\n    </div>\n  </div>\n);\n\n\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\n  <div>\n    <label>{label}</label>\n    <div>\n      <input {...input} type={type} placeholder={label} />\n      {touched && error && <span>{error}</span>}\n    </div>\n  </div>\n);\n\n\nconst renderAnswers = ({ fields, meta: { error } }) => (\n  <ul>\n    <li>\n      <button type=\"button\" onClick={() => fields.push()}>Add Option</button>\n    </li>\n    {fields.map((answers, index) => (\n      <li key={index}>\n        <button\n          type=\"button\"\n          title=\"Remove Option\"\n          onClick={() => fields.remove(index)}\n        />\n        <Field\n          name={answers}\n          type=\"text\"\n          component={renderField}\n          label={`Option #${index + 1}`}\n        />\n      </li>\n    ))}\n    {error && <li className=\"error\">{error}</li>}\n  </ul>\n);\n\nconst renderQuestions = ({ fields, meta: { touched, error, submitFailed } }) => (\n\n  <ul>\n    <li>\n      <button type=\"button\" onClick={() => fields.push({})}>Add Question</button>\n      {(touched || submitFailed) && error && <span>{error}</span>}\n    </li>\n    {fields.map((question, index) => (\n      <li key={index}>\n        <button\n          type=\"button\"\n          title=\"Remove Question\"\n          onClick={() => fields.remove(index)}\n        />\n        <h4>Question #{index + 1}</h4>\n        <Field\n          name={`${question}.question`}\n          type=\"text\"\n          component={renderField}\n          label=\"Question\"\n        />\n        <Field\n          name={`${question}.correct_answer`}\n          type=\"text\"\n          component={renderField}\n          label=\"Correct Answer Option\"\n        />\n        <Field type=\"hidden\" name={`${question}.id`} component={renderCount} />\n        <FieldArray name={`${question}.answers`} component={renderAnswers} />\n      </li>\n    ))}\n\n  </ul>\n\n);\n\nconst FieldArraysForm = props => {\n  const { handleSubmit, pristine, reset, submitting } = props;\n  //this.props.change(id, getCount)\n  getCount();\n  return (\n    <form onSubmit={handleSubmit}>\n\n      <Field\n        name=\"name\"\n        type=\"text\"\n        component={renderField}\n        label=\"Quiz Name\"\n      />\n      <FieldArray name=\"questions\" component={renderQuestions} />\n      <div>\n        <button type=\"submit\" disabled={submitting}>Submit</button>\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: 'fieldArrays', // a unique identifier for this form\n  validate,\n})(FieldArraysForm);\n","import axios from 'axios';\nexport default (async function showResults(values) {\n  axios.request({\n    method: 'post',\n    url: '/api/quizzes/',\n    data: values\n  }).then(response => {\n    var lang = response.data.id;\n    localStorage.setItem('mcqId', lang);\n    alert('MCQ Quiz added successfully!!')\n    window.opener = null;\n    window.open(\"\", \"_self\");\n    window.close();\n  }).catch(err => console.log(err));\n\n\n});\n\n","import { createStore, combineReducers } from 'redux';\nimport { reducer as reduxFormReducer } from 'redux-form';\n\nconst reducer = combineReducers({\n  form: reduxFormReducer, // mounted under \"form\"\n});\nconst store = (window.devToolsExtension\n  ? window.devToolsExtension()(createStore)\n  : createStore)(reducer);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { Values } from \"redux-form-website-template\";\nimport FieldArraysForm from \"./FieldArraysForm\";\nimport showResults from \"./showResults\";\nimport store from \"./store\";\n\nclass Indexer extends Component {\n\n  render() {\n\n    return (\n      <Provider store={store}>\n        <div style={{ padding: 15 }}>\n          <h2>Add Assessment</h2>\n          <FieldArraysForm onSubmit={showResults} />\n\n          <Values form=\"fieldArrays\" />\n        </div>\n      </Provider>\n    )\n  }\n};\nexport default Indexer;\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass FinalQuizItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: props.item\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <tr><td className=\"collection-item\"> {this.state.item.name}</td>\r\n                <td><Link to={`/quiz/getQuiz/${this.state.item.id}`}>\r\n                    Attempt </Link></td>\r\n            </tr>);\r\n    }\r\n\r\n}\r\n\r\nexport default FinalQuizItem;\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport FinalQuizItem from './FinalQuizItem';\r\nclass Assessment extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            quiz: [],\r\n            mcq: []\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.getAssessments();\r\n    }\r\n    getAssessments() {\r\n\r\n        axios.get('/api/final/').then(response => {\r\n            this.setState({ quiz: response.data }, () => {\r\n\r\n            });\r\n        })\r\n        let id = this.state.quiz;\r\n\r\n\r\n    }\r\n    render() {\r\n        const meetupItems = this.state.quiz.map((meetup, i) => {\r\n            console.log('inside')\r\n            return (<FinalQuizItem key={meetup.mcqID}\r\n                item={meetup} />)\r\n        })\r\n\r\n\r\n        return (\r\n            <div >\r\n                <h1>Pending Assessments</h1>\r\n                {meetupItems.length === 0 ? <h4 className=\"green-text\">No Pending Assessments</h4> :\r\n\r\n                    <table id=\"quiz\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Assessment</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {meetupItems}\r\n                        </tbody>\r\n                    </table>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Assessment;\r\n","import XLSX from 'xlsx';\r\n/* generate an array of column objects */\r\nexport const make_cols = refstr => {\r\n\tlet o = [], C = XLSX.utils.decode_range(refstr).e.c + 1;\r\n\tfor(var i = 0; i < C; ++i) o[i] = {name:XLSX.utils.encode_col(i), key:i}\r\n\treturn o;\r\n};","import axios from 'axios';\r\nimport { Label } from 'office-ui-fabric-react';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport XLSX from 'xlsx';\r\nimport { make_cols } from './MakeColumns';\r\n\r\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\nconst SheetJSFT = [\r\n  \"xlsx\", \"xlsb\", \"xlsm\", \"xls\", \"xml\", \"csv\", \"txt\", \"ods\", \"fods\", \"uos\", \"sylk\", \"dif\", \"dbf\", \"prn\", \"qpw\", \"123\", \"wb*\", \"wq*\", \"html\", \"htm\"\r\n].map(function (x) { return \".\" + x; }).join(\",\");\r\n\r\nclass ExcelReader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      file: {},\r\n      data: [],\r\n      cols: [],\r\n      newData: [],\r\n      name: '',\r\n      finalData: [],\r\n      voicedata: [],\r\n      finalVoiceData: [],\r\n      newVoiceData: []\r\n    }\r\n    this.handleFile = this.handleFile.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  addMCQQuiz(values) {\r\n    axios.request({\r\n      method: 'post',\r\n      url: '/api/quizzes/',\r\n      data: values\r\n    }).then(response => {\r\n      var lang = response.data.id;\r\n      localStorage.setItem('mcqId', lang);\r\n    }).catch(err => console.log(err));\r\n  }\r\n\r\n  handleChange(e) {\r\n    const files = e.target.files;\r\n    if (files && files[0]) this.setState({ file: files[0] });\r\n  };\r\n\r\n  handleFile() {\r\n    if (this.state.file.name === undefined) {\r\n      document.getElementById(\"error\").innerHTML = \"Please upload file\"\r\n      return;\r\n    }\r\n    if (this.state.name.length === 0) {\r\n\r\n      document.getElementById(\"error\").innerHTML = \"Name is mandatory\"\r\n      return;\r\n    }\r\n    /* Boilerplate to set up FileReader */\r\n    const reader = new FileReader();\r\n    const rABS = !!reader.readAsBinaryString;\r\n\r\n    reader.onload = (e) => {\r\n      /* Parse data */\r\n      const bstr = e.target.result;\r\n      const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array', bookVBA: true });\r\n      const ws = wb.Sheets[\"mcq\"];\r\n      if (ws != null) {\r\n        /* Convert array of arrays */\r\n        const data = XLSX.utils.sheet_to_json(ws);\r\n        /* Update state */\r\n        this.setState({ data: data, cols: make_cols(ws['!ref']) }, () => {\r\n          var temp = this.state.data;\r\n          const len = temp.length;\r\n          for (var i = 0; i < len; i++) {\r\n\r\n            this.state.data[i].answers = [this.state.data[i].Option1, this.state.data[i].Option2, this.state.data[i].Option3, this.state.data[i].Option4];\r\n            this.state.newData[i] = {\r\n              \"question\": this.state.data[i].question,\r\n              \"answers\": this.state.data[i].answers,\r\n              \"correct_answer\": this.state.data[i].correct_answer\r\n            }\r\n\r\n          }\r\n          this.state.finalData = {\r\n            \"name\": this.state.name,\r\n            \"questions\": this.state.newData\r\n          }\r\n          this.addMCQQuiz(this.state.finalData);\r\n        });\r\n      }\r\n      const wsvoice = wb.Sheets[\"voice\"];\r\n      if (wsvoice != null) {\r\n        /* Convert array of arrays */\r\n        const voicedata = XLSX.utils.sheet_to_json(wsvoice);\r\n        /* Update state */\r\n        this.setState({ voicedata: voicedata, cols: make_cols(wsvoice['!ref']) }, () => {\r\n          var temp = this.state.voicedata;\r\n          const len = temp.length;\r\n          for (var i = 0; i < len; i++) {\r\n            //this.state.data[i].answers=[this.state.data[i].Option1,this.state.data[i].Option2,this.state.data[i].Option3,this.state.data[i].Option4];\r\n            this.state.newVoiceData[i] = {\r\n              \"question\": this.state.voicedata[i].question,\r\n\r\n              \"keywords\": this.state.voicedata[i].keywords\r\n            }\r\n          }\r\n          this.state.finalVoiceData = {\r\n            \"name\": this.state.name,\r\n            \"questions\": this.state.newVoiceData\r\n          }\r\n          this.addVoiceQuiz(this.state.finalVoiceData)\r\n\r\n        });\r\n      }\r\n      this.addFinalQuiz();\r\n\r\n    };\r\n\r\n    if (rABS) {\r\n      reader.readAsBinaryString(this.state.file);\r\n    } else {\r\n      reader.readAsArrayBuffer(this.state.file);\r\n    };\r\n  }\r\n  handleInputChange(e) {\r\n\r\n    const target = e.target;\r\n    const value = target.value;\r\n    this.setState({\r\n      name: value\r\n    })\r\n  }\r\n  async addFinalQuiz() {\r\n    await sleep(700)\r\n    var finalQuiz = {\r\n      \"name\": this.state.name, \"mcqID\": localStorage.getItem('mcqId'),\r\n      \"voiceID\": localStorage.getItem('voiceId')\r\n    }\r\n    if (localStorage.getItem('voiceId') == null) {\r\n      delete finalQuiz['voiceID'];\r\n    }\r\n    if (localStorage.getItem('mcqId') == null) {\r\n      delete finalQuiz['mcqID'];\r\n    }\r\n    axios.request({\r\n      method: 'post',\r\n      url: '/api/final/',\r\n      data: finalQuiz\r\n    }).then(response => {\r\n      localStorage.removeItem('mcqId')\r\n      localStorage.removeItem('voiceId')\r\n      window.location.replace(\"/\");\r\n    }).catch(err => console.log(err));\r\n  }\r\n\r\n  addVoiceQuiz(values) {\r\n    axios.request({\r\n      method: 'post',\r\n      url: '/api/voice/',\r\n      data: values\r\n    }).then(response => {\r\n      var voiceID = response.data.id\r\n      localStorage.setItem('voiceId', voiceID);\r\n\r\n    }).catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 color=\"blue\">MCQ Template Upload</h1>\r\n        <hr />\r\n        <p>\r\n          You can upload your template of quiz following below steps.\r\n        </p>\r\n\r\n        <b color=\"blue\"><u>Instructions</u></b>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/files/MCQTemplate.xlsx\" target=\"_blank\" download>Download </Link>\r\n                   the template attached here.</li>\r\n          <li>Fill in your question , options and correct answer</li>\r\n          <li>Do not modify the order of columns</li>\r\n          <li>If you need to remove number of options, delete the corresponding columns from the template before uploading</li>\r\n          <li>Do not rename the worksheet names while uploading</li>\r\n        </ul>\r\n\r\n        <Label htmlFor=\"name\">Quiz Name</Label>\r\n        <input type=\"text\" id=\"name\" ref=\"name\" onChange={this.handleInputChange}></input>\r\n        <span id=\"error\" className=\"red-text\"></span>\r\n        <br></br>\r\n\r\n        <input type=\"file\" className=\"form-control\" id=\"file\" accept={SheetJSFT} onChange={this.handleChange} />\r\n\r\n        <br />\r\n        <br></br>\r\n        <input type='submit'\r\n          className=\"btn\"\r\n          value=\"Upload Quiz\"\r\n          onClick={this.handleFile} />\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default ExcelReader;\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass FinalQuizAdd extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: props.item,\r\n            mcqID: '',\r\n            voiceID: '',\r\n            name: '',\r\n            proceed: true\r\n\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.addFinalQuiz = this.addFinalQuiz.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onClick1 = this.onClick1.bind(this);\r\n\r\n    }\r\n    handleInputChange(e) {\r\n\r\n        const target = e.target;\r\n        const value = target.value;\r\n        //const name=target.name;\r\n\r\n        this.setState({\r\n            name: value\r\n        })\r\n    }\r\n    onClick() {\r\n        this.btn.setAttribute(\"disabled\", \"disabled\");\r\n        this.setState({\r\n            proceed: false\r\n        })\r\n    }\r\n    onClick1() {\r\n        this.btn1.setAttribute(\"disabled\", \"disabled\");\r\n        this.setState({\r\n            proceed: false\r\n        })\r\n    }\r\n    addFinalQuiz() {\r\n        if (this.state.name.length === 0) {\r\n\r\n            document.getElementById(\"error\").innerHTML = \"Name is mandatory\"\r\n            return;\r\n        }\r\n        var finalQuiz = {\r\n            \"name\": this.state.name,\r\n            \"mcqID\": localStorage.getItem('mcqId'),\r\n            \"voiceID\": localStorage.getItem('voiceId')\r\n        }\r\n        if (localStorage.getItem('voiceId') == null) {\r\n            delete finalQuiz['voiceID'];\r\n        }\r\n        if (localStorage.getItem('mcqId') == null) {\r\n            delete finalQuiz['mcqID'];\r\n        }\r\n\r\n        axios.request({\r\n            method: 'post',\r\n            url: '/api/final/',\r\n            data: finalQuiz\r\n        }).then(response => {\r\n            localStorage.removeItem('mcqId')\r\n            localStorage.removeItem('voiceId')\r\n            window.location.replace(\"/\");\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h1>Add new Assessment - Instructions</h1>\r\n                <ul>\r\n                    <li>This assessment consists of two sections - MCQ and Oral</li>\r\n                    <li>To access the section, click on the corresponsding link</li>\r\n                    <li>Some assessment will have only one section, in which case the other link will be disabled\r\n                    Students are requested to attempt only the enabled assessment links\r\n                </li>\r\n                    <li>Clicking the section link will oprn a new window. Students must attempt all the questions and close the browser only when prompted</li>\r\n                </ul>\r\n                <label htmlFor=\"name\">Quiz Name</label>\r\n                <input type=\"text\" required id=\"name\" ref=\"name\" onChange={this.handleInputChange}></input>\r\n                <span id=\"error\" className=\"red-text\"></span>\r\n                <br></br>\r\n                <Link ref={btn => { this.btn = btn; }} onClick={this.onClick} className=\"btn\" to={{\r\n                    pathname: '/mcq/addAssessment',\r\n                    state: {\r\n                        name: this.state.name\r\n                    }\r\n                }} target=\"_blank\" disabled={this.state.mcqID === undefined ? true : false} >\r\n                    MCQ   </Link>\r\n\r\n                <br></br>\r\n                <br></br>\r\n                <Link className=\"btn\" ref={btn1 => { this.btn1 = btn1; }} onClick={this.onClick1} to='/voice/addAssessment' disabled={this.state.voiceID === undefined ? true : false} target=\"_blank\"  >\r\n                    VOICE   </Link>\r\n                <br></br>\r\n\r\n                <button className=\"btn\" onClick={this.addFinalQuiz} disabled={this.state.proceed} >Proceed</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FinalQuizAdd;\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass FinalQuizDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: props.item,\r\n            mcqID: '',\r\n            voiceID: '',\r\n            btn: '',\r\n            btn1: ''\r\n\r\n        }\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onClick1 = this.onClick1.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAssessments();\r\n\r\n    }\r\n    getAssessments() {\r\n        let quizId = this.props.match.params.id;\r\n        axios.get(`/api/final/${quizId}`).then(response => {\r\n\r\n            this.setState({ mcqID: response.data.mcqID, voiceID: response.data.voiceID }, () => {\r\n\r\n            });\r\n        })\r\n    }\r\n    onClick() {\r\n        this.btn.setAttribute(\"disabled\", \"disabled\");\r\n    }\r\n    onClick1() {\r\n        this.btn1.setAttribute(\"disabled\", \"disabled\");\r\n    }\r\n    render() {\r\n        const { voiceID } = this.state\r\n        return (\r\n            <div>\r\n                <h1>Assessment Instructions</h1>\r\n                <ul>\r\n                    <li>This assessment consists of two sections - MCQ and Oral</li>\r\n                    <li>To access the section, click on the corresponsding link</li>\r\n                    <li>Some assessment will have only one section, in which case the other link will be disabled\r\n                    Students are requested to attempt only the enabled assessment links\r\n                </li>\r\n                    <li>Clicking the section link will oprn a new window. Students must attempt all the questions and close the browser only when prompted</li>\r\n                </ul>\r\n                <br></br>\r\n                {this.state.mcqID !== undefined ? <Link ref={btn => { this.btn = btn; }} className=\"btn\" onClick={this.onClick} to={{\r\n                    pathname: `/quiz/getQuizDetail/${this.state.mcqID}`,\r\n                    state: {\r\n                        voiceID: voiceID\r\n                    }\r\n                }} style={{ float: \"right\" }} >\r\n                    Start Assessment  </Link> :\r\n                    <Link ref={btn => { this.btn = btn; }} className=\"btn\" to={{\r\n                        pathname: `/voice/showAssessment/${this.state.voiceID}`\r\n                    }} style={{ float: \"right\" }}  >\r\n                        Start Assessment  </Link>\r\n                }\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FinalQuizDetails;\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nclass Image extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: '',\r\n      baseString: '',\r\n      id: ''\r\n    }\r\n    this.imageToBase = this.imageToBase.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n\r\n\r\n  imageToBase(ids) {\r\n    let id = sessionStorage.getItem('pic')\r\n    axios.get(`/api/scores/${id}`).then(response => {\r\n      this.setState({ data: response.data.quizID }, () => {\r\n      });\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n  handleChange(e) {\r\n    const files = e.target.files;\r\n    var file = files[0];\r\n    var reader = new FileReader();\r\n    reader.onloadend = function () {\r\n      this.baseString = reader.result;\r\n      axios.request({\r\n        method: 'post',\r\n        url: '/api/scores/',\r\n        data: { quizID: this.baseString }\r\n      }).then(response => {\r\n        sessionStorage.setItem('pic', response.data.id)\r\n\r\n      }).catch(err => console.log(err));\r\n\r\n    }\r\n    reader.readAsDataURL(file);\r\n  };\r\n  render() {\r\n    const { data } = this.state\r\n    const Example = ({ data }) => <img src={`${data}`} />\r\n\r\n    return (\r\n      <div>\r\n        <input type=\"file\" onChange={this.handleChange} />\r\n        <br></br>\r\n        <br></br>\r\n        <button onClick={this.imageToBase}>Retrieve</button>\r\n        <br></br><br></br>\r\n        < Example data={data} />\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Image;\r\n","import React from 'react';\nimport './Answer.css';\n\nconst Answer = (props) => {\n\n\n\n    let answers = Object.keys(props.answer.answers)\n        .map((qAnswer, i) => (\n\n            <li\n                className=\n                {\n                    props.answer.correct_answer === Number(qAnswer) + 1 ?\n                        'correct' :\n                        props.clickedAnswer === Number(qAnswer) + 1 ?\n                            'incorrect' : ''\n                }\n                onClick={() => {\n                    props.checkAnswer(qAnswer)\n\n\n                }\n                }\n                key={qAnswer} >\n\n                {props.answer.answers[qAnswer]}\n            </li >\n        ));\n\n    return (\n        <>\n            <ul disabled={props.clickedAnswer ? true : false} className=\"Answers\">\n                {answers}\n            </ul>\n\n\n        </>\n    );\n};\nexport default Answer;\n","import React from 'react';\nimport './Question.css';\n\nconst Question = (props) => {\n    return (\n        <h1 className=\"blue-text text-darken-2\">{props.question.question}</h1>\n    );\n}\n\nexport default Question;\n","import axios from 'axios';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Answer from './answer/Answer';\r\nimport Question from './question/Question';\r\nimport './QuizMain.css';\r\n\r\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\nexport default class QuizDetails extends Component {\r\n\r\n    // initiating the local state\r\n    state = {\r\n        quiestions: {},\r\n        totalTime: '',\r\n        answers: {\r\n            \"answers\": [\r\n\r\n            ]\r\n        },\r\n        correctAnswers: '',\r\n        correctAnswer: 0,\r\n        clickedAnswer: 0,\r\n        step: 0,\r\n        score: 0,\r\n        details: [],\r\n        questions: [{}],\r\n        question: '',\r\n        minutes: '',\r\n        seconds: 1,\r\n        showLoader: true,\r\n        length: '',\r\n        voiceID: ''\r\n    }\r\n    componentDidMount() {\r\n        this.getQuiz();\r\n        this.setTime();\r\n        if (this.props.location.state !== undefined)\r\n            this.setState({\r\n                voiceID: this.props.location.state.voiceID\r\n            })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n    setTime() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n    async getQuiz() {\r\n        await sleep(700);\r\n        let quizId = this.props.match.params.id;\r\n        axios.get(`/api/quizzes/${quizId}`).then(response => {\r\n            this.setState({\r\n                details: response.data,\r\n                quiestions: this.state.details.questions,\r\n                questions: response.data.questions,\r\n                question: this.state.questions.question,\r\n                totalTime: (response.data.questions.length) * 30,\r\n                minutes: Math.floor(((response.data.questions.length) * 30) / 60),\r\n                seconds: ((response.data.questions.length) * 30) % 60,\r\n                length: response.data.questions.length\r\n            }, () => {\r\n                this.setQuestion();\r\n            });\r\n        })\r\n\r\n\r\n    }\r\n    setQuestion() {\r\n        this.setState({\r\n            question: this.state.questions[this.state.step].question,\r\n            correctAnswers: this.state.questions[this.state.step].correct_answer - 1\r\n        });\r\n        this.setState({\r\n            showLoader: false\r\n        })\r\n    }\r\n\r\n    checkAnswer = answer => {\r\n        const { correctAnswers, step, score } = this.state;\r\n        this.state.correctAnswers = this.state.questions[step].correct_answer - 1;\r\n        if (answer == this.state.correctAnswers) {\r\n            this.setState({\r\n                score: score + 1,\r\n                correctAnswer: correctAnswers,\r\n                clickedAnswer: answer\r\n            });\r\n        } else {\r\n            this.setState({\r\n                correctAnswer: 0,\r\n                clickedAnswer: answer\r\n            });\r\n        }\r\n    }\r\n\r\n    // method to move to the next question\r\n    nextStep = (step) => {\r\n        this.setState({\r\n            step: step + 1,\r\n            correctAnswer: 0,\r\n            clickedAnswer: 0,\r\n\r\n        });\r\n\r\n    }\r\n    render() {\r\n        let { correctAnswer, questions, clickedAnswer, step, score, minutes, seconds, showLoader } = this.state;\r\n        return (\r\n            <Fragment>\r\n                {this.state.showLoader && <div id=\"loader\" className=\"container1\"></div>}\r\n                {!this.state.showLoader && < div className=\"Content\" >\r\n                    <br></br>\r\n                    <h1 className=\"blue-text text-darken-2\">{this.state.details.name}</h1>\r\n                    <hr></hr>\r\n                    {\r\n                        step < Object.keys(questions).length && !(minutes == 0 && seconds == 0) && !showLoader ?\r\n                            (<>\r\n                                <div id=\"hud\">\r\n                                    <div id=\"hud-item\">\r\n                                        <p id=\"progressText\" className=\"hud-prefix\">\r\n                                            Question {step + 1}/{this.state.length}\r\n                                        </p>\r\n\r\n                                        <div id=\"progressBar\">\r\n                                            <div id=\"progressBarFull\" style={{ width: (step + 1) / this.state.length * 100 + \"%\" }}></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div id=\"hud-item\">\r\n                                        <p className=\"hud-prefix\">\r\n                                            Score\r\n            </p>\r\n                                        <h1 className=\"hud-main-text green-text\" id=\"score\" >\r\n                                            {this.state.score}\r\n                                        </h1>\r\n                                    </div>\r\n                                </div>\r\n                                <Question\r\n                                    question={questions[step]}\r\n                                    step={step}\r\n                                />\r\n                                {minutes === 0 && seconds < 10\r\n                                    ? <h4 align=\"right\" className=\"red-text text-darken-2\"><i className=\"fa fa-hourglass-half\">Time Remaining: {minutes}:{seconds < 10 ? `0${seconds}` : seconds}</i></h4>\r\n                                    : <h4 align=\"right\" className=\"blue-text text-darken-2\"><i className=\"fa fa-hourglass-half\">Time Remaining: {minutes}:{seconds < 10 ? `0${seconds}` : seconds}</i></h4>\r\n                                }\r\n                                <Answer\r\n                                    answer={questions[step]}\r\n                                    step={step}\r\n                                    checkAnswer={this.checkAnswer}\r\n                                    correctAnswer={correctAnswer}\r\n                                    clickedAnswer={clickedAnswer}\r\n                                    test={minutes === 0 && seconds === 0 ? 'disabled' : ''}\r\n                                />\r\n                                <button\r\n                                    className=\"NextStep\"\r\n                                    disabled={\r\n                                        (clickedAnswer && Object.keys(questions).length >= step)\r\n                                            || (minutes === 0 && seconds === 0)\r\n                                            ? false : true\r\n                                    }\r\n                                    onClick={() => this.nextStep(step)}>Next</button>\r\n                            </>) : (\r\n\r\n\r\n                                <div className=\"finalPage\">\r\n\r\n                                    {minutes === 0 && seconds === 0 ? <h1>Time Up!</h1>\r\n                                        : <h1>You have completed the quiz!</h1>}\r\n                                    <h1>Your score is: {score} of {Object.keys(questions).length}</h1>\r\n                                    <h1>Thank you!</h1>\r\n\r\n\r\n                                    <br></br>\r\n\r\n\r\n                                    <br></br>\r\n                                    {this.state.voiceID !== '' && this.state.voiceID !== undefined ?\r\n                                        <Link ref={btn1 => { this.btn1 = btn1; }} className=\"btn\" to={`/voice/showAssessment/${this.state.voiceID}`}  >\r\n                                            PROCEED TO NEXT SECTION - VOICE   </Link> :\r\n                                        <Link className=\"btn\" to={`/`} >\r\n                                            HOME   </Link>}\r\n\r\n                                </div>\r\n\r\n                            )\r\n                    }\r\n                </div >}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n","const validate = values => {\r\n\r\n  const errors = {}\r\n  if (!values.name) {\r\n    errors.name = 'Required'\r\n  }\r\n  if (!values.questions || !values.questions.length) {\r\n    errors.questions = { _error: 'At least one question must be entered' }\r\n  } else {\r\n    const questionsArrayErrors = []\r\n    values.questions.forEach((question, questionIndex) => {\r\n      const questionErrors = {}\r\n\r\n      if (!question || !question.question || question.question === undefined) {\r\n\r\n        questionErrors.question = 'Required'\r\n        questionsArrayErrors[questionIndex] = questionErrors\r\n      }\r\n      if (!question || !question.keywords) {\r\n        questionErrors.keywords = 'Required'\r\n        questionsArrayErrors[questionIndex] = questionErrors\r\n      }\r\n\r\n    })\r\n    if (questionsArrayErrors.length) {\r\n      errors.questions = questionsArrayErrors\r\n    }\r\n  }\r\n\r\n  return errors\r\n}\r\n\r\nexport default validate\r\n","import React from 'react';\nimport { Field, FieldArray, reduxForm } from 'redux-form';\nimport validate from './validate';\n\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\n  <div>\n    <label>{label}</label>\n    <div>\n      <input {...input} type={type} placeholder={label} />\n      {touched && error && <span>{error}</span>}\n    </div>\n  </div>\n);\n\nconst renderQuestions = ({ fields, meta: { touched, error, submitFailed } }) => (\n\n  <ul>\n    <li>\n      <button type=\"button\" onClick={() => fields.push({})}>Add Question</button>\n      {(touched || submitFailed) && error && <span>{error}</span>}\n    </li>\n    {fields.map((question, index) => (\n      <li key={index}>\n        <button\n          type=\"button\"\n          title=\"Remove Question\"\n          onClick={() => fields.remove(index)}\n        />\n        <h4>Question #{index + 1}</h4>\n        <Field\n          name={`${question}.question`}\n          type=\"text\"\n          component={renderField}\n          label=\"Question\"\n          className=\"\"\n          style={{ height: \"20px\" }}\n        />\n        <Field\n          name={`${question}.keywords`}\n          type=\"text\"\n          component={renderField}\n          label=\"Keywords\"\n        />\n\n\n      </li>\n    ))}\n  </ul>\n);\n\nconst FieldArraysForm1 = props => {\n  const { handleSubmit, pristine, reset, submitting } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n\n      <Field\n        name=\"name\"\n        type=\"text\"\n        component={renderField}\n        label=\"Quiz Name\"\n      />\n\n      <FieldArray name=\"questions\" component={renderQuestions} />\n      <div>\n        <button type=\"submit\" disabled={submitting}>Submit</button>\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: 'fieldArrays', // a unique identifier for this form\n  validate,\n})(FieldArraysForm1);\n","import axios from 'axios';\n//const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\nexport default (async function showResults(values) {\n\n    var mcqID = values['id'];\n    delete values['id'];\n    axios.request({\n        method: 'post',\n        url: '/api/voice/',\n        data: values\n    }).then(response => {\n        var voiceID = response.data.id\n        localStorage.setItem('voiceId', voiceID);\n        alert('Voice Quiz added successfully!!')\n        window.opener = null;\n        window.open(\"\", \"_self\");\n        window.close();\n    }).catch(err => console.log(err));\n});\n\n","import { createStore, combineReducers } from 'redux';\nimport { reducer as reduxFormReducer } from 'redux-form';\n\nconst reducer = combineReducers({\n  form: reduxFormReducer, // mounted under \"form\"\n});\nconst store = (window.devToolsExtension\n  ? window.devToolsExtension()(createStore)\n  : createStore)(reducer);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { Values } from \"redux-form-website-template\";\nimport FieldArraysForm from \"./FieldArraysForm\";\nimport showResults from \"./showResults\";\nimport store from \"./store\";\n\n\n\nclass VoiceIndexer extends Component {\n  render() {\n    var url = document.URL;\n    var id = url.substring(url.lastIndexOf('=') + 1);\n    return (\n      <Provider store={store}>\n        <div style={{ padding: 15 }}>\n          <h2>Add Voice Assessment</h2>\n          <FieldArraysForm initialValues={{ id }} onSubmit={showResults} />\n          <Values form=\"fieldArrays\" />\n        </div>\n      </Provider>\n    )\n  }\n};\nexport default VoiceIndexer;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon } from 'watson-react-components';\n\nvar test;\n// reducer to convert a list of messages into a (flat) list of results\nfunction allResultsReducer(list, message) {\n  return list.concat(message.results);\n}\n\n// reducer to extract all matched keywords from a list of results\nfunction keywordReducer(keywords, result) {\n  Object.keys(result.keywords_result || {}).forEach((k) => {\n    keywords[k] = keywords[k] || []; // eslint-disable-line\n    keywords[k].push(...result.keywords_result[k]);\n  });\n  return keywords;\n}\n\nfunction getSpotted(messages) {\n  return messages.reduce(allResultsReducer, []).reduce(keywordReducer, {});\n}\n\nexport function Keywords(props) {\n  const { isInProgress, messages, keywords } = props;\n  const notSpotted = isInProgress\n    ? 'Not yet spotted.'\n    : 'Not spotted.';\n  const notSpottedIcon = isInProgress\n    ? 'loader'\n    : 'close';\n    test=isInProgress;\n  const spotted = getSpotted(messages);\n  const list = keywords.map((k) => {\n    const spottings = spotted[k];\n    return (\n      <li key={k} className=\"base--li\">\n        <Icon\n          type={spottings\n            ? 'success-o'\n            : notSpottedIcon}\n          size=\"small\"\n        /> {' '}\n        <b>{k}</b>: {spottings\n          ? 'Spotted - '\n          : notSpotted}\n        <span className=\"base--p_light\">\n          {(spottings || []).map(s => `${s.start_time}-${s.end_time}s (${Math.round(s.confidence * 100)}%)`).join(', ')}\n        </span>\n      </li>\n    );\n  });\n  return (\n    <div>\n      <ul className=\"base--ul base--ul_no-bullets\">\n        {list}\n      </ul>\n    </div>\n    \n  );\n}\n\nKeywords.propTypes = {\n  messages: PropTypes.array.isRequired, // eslint-disable-line\n  keywords: PropTypes.array.isRequired, // eslint-disable-line\n  isInProgress: PropTypes.bool.isRequired,\n};\n\nexport function getKeywordsSummary(keywords, messages) {\n  const spotted = Object.keys(getSpotted(messages)).length;\n  const total = keywords.length;\n  const sum = spotted / total;\n  console.log(spotted)\n  console.log(total)\n  \n  console.log('test'+sum)\n  sessionStorage.setItem('sum', Number(sum));\n  console.log('session sum check'+sessionStorage.getItem('sum'))\n\n  return `${spotted}/${total}`;\n}\n\nexport function updateSession(keywords, messages) {\n  const spotted = Object.keys(getSpotted(messages)).length;\n  const total = keywords.length;\n  \n  //localStorage.re\n  return `${spotted}/${total}`;\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function SpeakersView(props) {\n  try {\n    const results = props.messages.map(msg =>\n      // When resultsBySpeaker is enabled, each msg.results array may contain multiple results.\n      // The result_index is for the first result in the message,\n      // so we need to count up from there to calculate the key.\n\n      // resultsBySpeaker/SpeakerStream sets each results.speaker value once it is known,\n      // but can also return results without any speaker set if the speakerlessInterim flag\n      // is set (for faster UI updates).\n      msg.results.map((result, i) => (\n        <div key={`result-${msg.result_index + i}`}>\n          <dt>{typeof result.speaker === 'number'\n            ? `Speaker ${result.speaker}: `\n            : '(Detecting speakers): '}</dt>\n          <dd>{result.alternatives[0].transcript}</dd>\n        </div>\n      ))).reduce((a, b) => a.concat(b), []); // the reduce() call flattens the array\n    return (\n      <dialog className=\"speaker-labels\">\n        {results}\n      </dialog>\n    );\n  } catch (ex) {\n    console.log(ex);\n    return (\n      <span>{ex.message}</span>\n    );\n  }\n}\n\nSpeakersView.propTypes = {\n  messages: PropTypes.array.isRequired, // eslint-disable-line\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Transcript(props) {\n  try {\n    // When resultsBySpeaker is enabled, each msg.results array may contain multiple results.\n    // The result_index is for the first result in the message,\n    // so we need to count up from there to calculate the key.\n    const results = props.messages.map(msg => msg.results.map((result, i) => (\n      <span key={`result-${msg.result_index + i}`}>{result.alternatives[0].transcript}</span>\n    ))).reduce((a, b) => a.concat(b), []); // the reduce() call flattens the array\n    return (\n      <div>\n        {results}\n      </div>\n    );\n  } catch (ex) {\n    console.log(ex);\n    return <div>{ex.message}</div>;\n  }\n}\n\nTranscript.propTypes = {\n  messages: PropTypes.array.isRequired, // eslint-disable-line\n};\n","/* eslint no-param-reassign: 0 */\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Alert, Icon, Pane } from 'watson-react-components';\nimport recognizeFile from 'watson-speech/speech-to-text/recognize-file';\nimport recognizeMicrophone from 'watson-speech/speech-to-text/recognize-microphone';\nimport cachedModels from '../../data/models.json';\nimport samples from '../../data/samples.json';\nimport './App.css';\nimport { getKeywordsSummary, Keywords, updateSession } from './keywords.jsx';\nimport SpeakersView from './speaker.jsx';\nimport Transcript from './transcript.jsx';\n\nconst ERR_MIC_NARROWBAND = 'Microphone transcription cannot accommodate narrowband voice models, please select a broadband one.';\n\nexport class Demo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      model: 'en-US_BroadbandModel',\n      rawMessages: [],\n      formattedMessages: [],\n      audioSource: null,\n      speakerLabels: false,\n      keywords: this.getKeywords('en-US_BroadbandModel'),\n      // transcript model and keywords are the state that they were when the button was clicked.\n      // Changing them during a transcription would cause a mismatch between the setting sent to the\n      // service and what is displayed on the demo, and could cause bugs.\n      settingsAtStreamStart: {\n        model: '',\n        keywords: [],\n        speakerLabels: false,\n      },\n      error: null,\n      details: '',\n      questions: [],\n      question: '',\n      questionkey: ''\n    };\n    this.setKeywords = this.setKeywords.bind(this);\n    this.handleSampleClick = this.handleSampleClick.bind(this);\n    this.handleSample1Click = this.handleSample1Click.bind(this);\n    this.handleSample2Click = this.handleSample2Click.bind(this);\n    this.reset = this.reset.bind(this);\n    this.captureSettings = this.captureSettings.bind(this);\n    this.stopTranscription = this.stopTranscription.bind(this);\n    this.getRecognizeOptions = this.getRecognizeOptions.bind(this);\n    this.isNarrowBand = this.isNarrowBand.bind(this);\n    this.handleMicClick = this.handleMicClick.bind(this);\n    this.handleUploadClick = this.handleUploadClick.bind(this);\n    this.handleUserFile = this.handleUserFile.bind(this);\n    this.handleUserFileRejection = this.handleUserFileRejection.bind(this);\n    this.playFile = this.playFile.bind(this);\n    this.handleStream = this.handleStream.bind(this);\n    this.handleRawMessage = this.handleRawMessage.bind(this);\n    this.handleFormattedMessage = this.handleFormattedMessage.bind(this);\n    this.handleTranscriptEnd = this.handleTranscriptEnd.bind(this);\n    this.getKeywords = this.getKeywords.bind(this);\n    this.handleModelChange = this.handleModelChange.bind(this);\n    this.supportsSpeakerLabels = this.supportsSpeakerLabels.bind(this);\n    this.handleSpeakerLabelsChange = this.handleSpeakerLabelsChange.bind(this);\n    this.handleKeywordsChange = this.handleKeywordsChange.bind(this);\n    this.getKeywordsArr = this.getKeywordsArr.bind(this);\n    this.getKeywordsArrUnique = this.getKeywordsArrUnique.bind(this);\n    this.getFinalResults = this.getFinalResults.bind(this);\n    this.getCurrentInterimResult = this.getCurrentInterimResult.bind(this);\n    this.getFinalAndLatestInterimResult = this.getFinalAndLatestInterimResult.bind(this);\n    this.handleError = this.handleError.bind(this);\n  }\n\n  reset() {\n    if (this.state.audioSource) {\n      this.stopTranscription();\n    }\n    this.setState({ rawMessages: [], formattedMessages: [], error: null });\n  }\n\n  /**\n     * The behavior of several of the views depends on the settings when the\n     * transcription was started. So, this stores those values in a settingsAtStreamStart object.\n     */\n  captureSettings() {\n    const { model, speakerLabels } = this.state;\n    this.setState({\n      settingsAtStreamStart: {\n        model,\n        keywords: this.getKeywordsArrUnique(),\n        speakerLabels,\n      },\n    });\n  }\n\n  stopTranscription() {\n    if (this.stream) {\n      this.stream.stop();\n      // this.stream.removeAllListeners();\n      // this.stream.recognizeStream.removeAllListeners();\n    }\n    this.setState({ audioSource: null });\n  }\n\n  getRecognizeOptions(extra) {\n    const keywords = this.getKeywordsArrUnique();\n    return Object.assign({\n      // formats phone numbers, currency, etc. (server-side)\n      access_token: this.state.accessToken,\n      token: this.state.token,\n      smart_formatting: true,\n      format: true, // adds capitals, periods, and a few other things (client-side)\n      model: this.state.model,\n      objectMode: true,\n      interim_results: true,\n      // note: in normal usage, you'd probably set this a bit higher\n      word_alternatives_threshold: 0.01,\n      keywords,\n      keywords_threshold: keywords.length\n        ? 0.01\n        : undefined, // note: in normal usage, you'd probably set this a bit higher\n      timestamps: true, // set timestamps for each word - automatically turned on by speaker_labels\n      // includes the speaker_labels in separate objects unless resultsBySpeaker is enabled\n      speaker_labels: this.state.speakerLabels,\n      // combines speaker_labels and results together into single objects,\n      // making for easier transcript outputting\n      resultsBySpeaker: this.state.speakerLabels,\n      // allow interim results through before the speaker has been determined\n      speakerlessInterim: this.state.speakerLabels,\n      url: this.state.serviceUrl,\n    }, extra);\n  }\n\n  isNarrowBand(model) {\n    model = model || this.state.model;\n    return model.indexOf('Narrowband') !== -1;\n  }\n\n  handleMicClick() {\n    if (this.state.audioSource === 'mic') {\n      this.stopTranscription();\n\n      return;\n    }\n    this.reset();\n    this.setState({ audioSource: 'mic' });\n\n\n    // The recognizeMicrophone() method is a helper method provided by the watson-speech package\n    // It sets up the microphone, converts and downsamples the audio, and then transcribes it\n    // over a WebSocket connection\n    // It also provides a number of optional features, some of which are enabled by default:\n    //  * enables object mode by default (options.objectMode)\n    //  * formats results (Capitals, periods, etc.) (options.format)\n    //  * outputs the text to a DOM element - not used in this demo because it doesn't play nice\n    // with react (options.outputElement)\n    //  * a few other things for backwards compatibility and sane defaults\n    // In addition to this, it passes other service-level options along to the RecognizeStream that\n    // manages the actual WebSocket connection.\n    this.handleStream(recognizeMicrophone(this.getRecognizeOptions()));\n  }\n\n  handleUploadClick() {\n    if (this.state.audioSource === 'upload') {\n      this.stopTranscription();\n    } else {\n      this.dropzone.open();\n    }\n  }\n\n  handleUserFile(files) {\n    const file = files[0];\n    if (!file) {\n      return;\n    }\n    this.reset();\n    this.setState({ audioSource: 'upload' });\n    this.playFile(file);\n  }\n\n  handleUserFileRejection() {\n    this.setState({ error: 'Sorry, that file does not appear to be compatible.' });\n  }\n  testFun() {\n    if (this.state.audioSource === 'mic') {\n      updateSession(this.settingsAtStreamStart, this.messages);\n    }\n  }\n  handleSample1Click() {\n    this.handleSampleClick(1);\n  }\n\n  handleSample2Click() {\n    this.handleSampleClick(2);\n  }\n\n\n  handleSampleClick(which) {\n    if (this.state.audioSource === `sample-${which}`) {\n      this.stopTranscription();\n    } else {\n      const filename = samples[this.state.model] && samples[this.state.model][which - 1].filename;\n      if (!filename) {\n        this.handleError(`No sample ${which} available for model ${this.state.model}`, samples[this.state.model]);\n      }\n      this.reset();\n      this.setState({ audioSource: `sample-${which}` });\n      this.playFile(`audio/${filename}`);\n    }\n  }\n\n  /**\n   * @param {File|Blob|String} file - url to an audio file or a File\n   * instance fro user-provided files.\n   */\n  playFile(file) {\n    // The recognizeFile() method is a helper method provided by the watson-speach package\n    // It accepts a file input and transcribes the contents over a WebSocket connection\n    // It also provides a number of optional features, some of which are enabled by default:\n    //  * enables object mode by default (options.objectMode)\n    //  * plays the file in the browser if possible (options.play)\n    //  * formats results (Capitals, periods, etc.) (options.format)\n    //  * slows results down to realtime speed if received faster than realtime -\n    // this causes extra interim `data` events to be emitted (options.realtime)\n    //  * combines speaker_labels with results (options.resultsBySpeaker)\n    //  * outputs the text to a DOM element - not used in this demo because it doesn't play\n    //  nice with react (options.outputElement)\n    //  * a few other things for backwards compatibility and sane defaults\n    // In addition to this, it passes other service-level options along to the RecognizeStream\n    // that manages the actual WebSocket connection.\n    this.handleStream(recognizeFile(this.getRecognizeOptions({\n      file,\n      play: true, // play the audio out loud\n      // use a helper stream to slow down the transcript output to match the audio speed\n      realtime: true,\n    })));\n  }\n\n  handleStream(stream) {\n    console.log(stream);\n    // cleanup old stream if appropriate\n    if (this.stream) {\n      this.stream.stop();\n      this.stream.removeAllListeners();\n      this.stream.recognizeStream.removeAllListeners();\n    }\n    this.stream = stream;\n    this.captureSettings();\n\n    // grab the formatted messages and also handle errors and such\n    stream.on('data', this.handleFormattedMessage).on('end', this.handleTranscriptEnd).on('error', this.handleError);\n\n    // when errors occur, the end event may not propagate through the helper streams.\n    // However, the recognizeStream should always fire a end and close events\n    stream.recognizeStream.on('end', () => {\n      if (this.state.error) {\n        this.handleTranscriptEnd();\n      }\n    });\n\n    // grab raw messages from the debugging events for display on the JSON tab\n    stream.recognizeStream\n      .on('message', (frame, json) => this.handleRawMessage({ sent: false, frame, json }))\n      .on('send-json', json => this.handleRawMessage({ sent: true, json }))\n      .once('send-data', () => this.handleRawMessage({\n        sent: true, binary: true, data: true, // discard the binary data to avoid waisting memory\n      }))\n      .on('close', (code, message) => this.handleRawMessage({ close: true, code, message }));\n\n    // ['open','close','finish','end','error', 'pipe'].forEach(e => {\n    //     stream.recognizeStream.on(e, console.log.bind(console, 'rs event: ', e));\n    //     stream.on(e, console.log.bind(console, 'stream event: ', e));\n    // });\n  }\n\n  handleRawMessage(msg) {\n    const { rawMessages } = this.state;\n    this.setState({ rawMessages: rawMessages.concat(msg) });\n  }\n\n  handleFormattedMessage(msg) {\n    const { formattedMessages } = this.state;\n    this.setState({ formattedMessages: formattedMessages.concat(msg) });\n  }\n\n  handleTranscriptEnd() {\n    // note: this function will be called twice on a clean end,\n    // but may only be called once in the event of an error\n    this.setState({ audioSource: null });\n  }\n\n  componentDidMount() {\n    this.fetchToken();\n    // tokens expire after 60 minutes, so automatcally fetch a new one ever 50 minutes\n    // Not sure if this will work properly if a computer goes to sleep for > 50 minutes\n    // and then wakes back up\n    // react automatically binds the call to this\n    // eslint-disable-next-line\n    // this.getVoiceQuizDetails();\n    console.log('tester')\n\n    var a = this.props.datal;\n    console.log(a)\n    this.state.question = a.question;\n    console.log(this.state.question)\n    this.state.questionkey = a.keywords\n    this.setState({ tokenInterval: setInterval(this.fetchToken, 50 * 60 * 1000) });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.tokenInterval);\n  }\n  getVoiceQuizDetails() {\n    let quizId = this.props.match.params.id;\n    axios.get(`http://localhost:3000/voice/${quizId}`).then(response => {\n      console.log(response.data);\n      this.setState({ details: response.data, questions: response.data.questions }, () => {\n        console.log(this.state);\n        console.log('after set state')\n      });\n    })\n    console.log(this.state.details)\n  }\n\n  fetchToken() {\n    return fetch('/apii/v1/credentials').then((res) => {\n      if (res.status !== 200) {\n        throw new Error('Error retrieving auth token');\n      }\n      return res.json();\n    }) // todo: throw here if non-200 status\n      .then(creds => this.setState({ ...creds })).catch(this.handleError);\n  }\n\n  getKeywords(model) {\n    // a few models have more than two sample files, but the demo can only handle\n    // two samples at the moment\n    // so this just takes the keywords from the first two samples\n    const files = samples[model];\n    return (files && files.length >= 2 && `${files[0].keywords}, ${files[1].keywords}`) || '';\n  }\n\n  setKeywords(keywords) {\n    //console.log('setKeywords start...')\n    //console.log(keywords)\n    this.state.keywords = keywords\n    //console.log('setKeywords end..')\n  }\n\n  handleModelChange(model) {\n    this.reset();\n    this.setState({\n      model,\n      keywords: this.getKeywords(model),\n      speakerLabels: this.supportsSpeakerLabels(model),\n    });\n\n    // clear the microphone narrowband error if it's visible and a broadband model was just selected\n    if (this.state.error === ERR_MIC_NARROWBAND && !this.isNarrowBand(model)) {\n      this.setState({ error: null });\n    }\n\n    // clear the speaker_lables is not supported error - e.g.\n    // speaker_labels is not a supported feature for model en-US_BroadbandModel\n    if (this.state.error && this.state.error.indexOf('speaker_labels is not a supported feature for model') === 0) {\n      this.setState({ error: null });\n    }\n  }\n\n  supportsSpeakerLabels(model) {\n    model = model || this.state.model;\n    // todo: read the upd-to-date models list instead of the cached one\n    return cachedModels.some(m => m.name === model && m.supported_features.speaker_labels);\n  }\n\n  handleSpeakerLabelsChange() {\n    this.setState(prevState => ({ speakerLabels: !prevState.speakerLabels }));\n  }\n\n  handleKeywordsChange(e) {\n    this.setState({ keywords: e.target.value });\n    //this.state({keywords: 'sky,worl'});\n    console.log('here');\n  }\n\n  keywordsLoad(e) {\n    this.setState({ keywords: e.value });\n  }\n\n  // cleans up the keywords string into an array of individual, trimmed, non-empty keywords/phrases\n  getKeywordsArr() {\n    return this.state.keywords.split(',').map(k => k.trim()).filter(k => k);\n  }\n\n  // cleans up the keywords string and produces a unique list of keywords\n  getKeywordsArrUnique() {\n    return this.state.keywords\n      .split(',')\n      .map(k => k.trim())\n      .filter((value, index, self) => self.indexOf(value) === index);\n  }\n\n  getFinalResults() {\n    return this.state.formattedMessages.filter(r => r.results\n      && r.results.length && r.results[0].final);\n  }\n\n  getCurrentInterimResult() {\n    const r = this.state.formattedMessages[this.state.formattedMessages.length - 1];\n\n    // When resultsBySpeaker is enabled, each msg.results array may contain multiple results.\n    // However, all results in a given message will be either final or interim, so just checking\n    // the first one still works here.\n    if (!r || !r.results || !r.results.length || r.results[0].final) {\n      return null;\n    }\n    return r;\n  }\n\n  getFinalAndLatestInterimResult() {\n    const final = this.getFinalResults();\n    const interim = this.getCurrentInterimResult();\n    if (interim) {\n      final.push(interim);\n    }\n    return final;\n  }\n\n  handleError(err, extra) {\n    console.error(err, extra);\n    if (err.name === 'UNRECOGNIZED_FORMAT') {\n      err = 'Unable to determine content type from file name or header; mp3, wav, flac, ogg, opus, and webm are supported. Please choose a different file.';\n    } else if (err.name === 'NotSupportedError' && this.state.audioSource === 'mic') {\n      err = 'This browser does not support microphone input.';\n    } else if (err.message === '(\\'UpsamplingNotAllowed\\', 8000, 16000)') {\n      err = 'Please select a narrowband voice model to transcribe 8KHz audio files.';\n    } else if (err.message === 'Invalid constraint') {\n      // iPod Touch does this on iOS 11 - there is a microphone, but Safari claims there isn't\n      err = 'Unable to access microphone';\n    }\n    this.setState({ error: err.message || err });\n  }\n\n\n\n\n  render() {\n    const {\n      token, accessToken, audioSource, error, settingsAtStreamStart,\n\n    } = this.state;\n\n    const buttonsEnabled = !!token || !!accessToken;\n    const buttonClass = buttonsEnabled\n      ? 'base--button'\n      : 'base--button base--button_black';\n\n    let micIconFill = '#000000';\n    let micButtonClass = buttonClass;\n    if (audioSource === 'mic') {\n      micButtonClass += ' mic-active';\n      micIconFill = '#FFFFFF';\n    } else if (!recognizeMicrophone.isSupported) {\n      micButtonClass += ' base--button_black';\n    }\n\n    const err = error\n      ? (\n        <Alert type=\"error\" color=\"red\">\n          <p className=\"base--p\">\n            {error}\n          </p>\n        </Alert>\n      )\n      : null;\n\n    const messages = this.getFinalAndLatestInterimResult();\n    const micBullet = (typeof window !== 'undefined' && recognizeMicrophone.isSupported)\n      ? <li className=\"base--li\">Use your microphone to record audio. For best results, use broadband models for microphone input.</li>\n      : <li className=\"base--li base--p_light\">Use your microphone to record audio. (Not supported in current browser)</li>;// eslint-disable-line\n\n    return (\n      <Dropzone\n        onDropAccepted={this.handleUserFile}\n        onDropRejected={this.handleUserFileRejection}\n        maxSize={200 * 1024 * 1024}\n        accept=\"audio/wav, audio/mp3, audio/mpeg, audio/l16, audio/ogg, audio/flac, .mp3, .mpeg, .wav, .ogg, .opus, .flac\" // eslint-disable-line\n        disableClick\n        className=\"dropzone _container _container_large\"\n        activeClassName=\"dropzone-active\"\n        rejectClassName=\"dropzone-reject\"\n        ref={(node) => {\n          this.dropzone = node;\n        }}\n      >\n\n\n\n        <div className=\"flex setup\">\n          <div className=\"column\">\n\n\n\n          </div>\n        </div>\n\n        <div className=\"flex buttons\">\n          <ul className=\"collection\">\n            <li className=\"collection-item\" onLoad={this.setKeywords(this.props.datal.keywords)}> {this.props.datal.question}\n            </li><li>\n              <button type=\"button btn-right\" className={micButtonClass} onClick={this.handleMicClick}>\n                <Icon type={audioSource === 'mic' ? 'stop' : 'microphone'} fill={micIconFill} /> Record Answer\n              </button>\n            </li>\n            <li className=\"collection-item\">\n              <Pane label=\"Text\">\n                {settingsAtStreamStart.speakerLabels\n                  ? <SpeakersView messages={messages} />\n                  : <Transcript messages={messages} />}\n              </Pane>\n            </li>\n            <li className=\"collection-item\">\n              <Pane label={`Keywords ${getKeywordsSummary(settingsAtStreamStart.keywords, messages)}`}>\n                <Keywords\n                  messages={messages}\n                  keywords={settingsAtStreamStart.keywords}\n                  isInProgress={!!audioSource}\n                >\n                </Keywords>\n\n                <p>Your answer matched {getKeywordsSummary(settingsAtStreamStart.keywords, messages)} keywords</p>\n\n              </Pane>\n            </li>\n\n\n            <li className=\"collection-item\">Keywords: {this.props.datal.keywords} </li>\n\n\n\n          </ul>\n\n\n\n\n        </div>\n\n        {err}\n\n\n      </Dropzone>\n\n    );\n  }\n};\n\nexport default Demo;\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass VoiceAssessmentItem extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            item:props.item\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(<li className=\"collection-item\">\r\n        <Link to={`/voice/showAssessment/${this.state.item.id}`}>\r\n        {this.state.item.name}</Link>\r\n        </li>);\r\n    }\r\n\r\n}\r\n\r\n export default VoiceAssessmentItem;","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport VoiceAssessmentItem from './VoiceAssessmentItem';\r\nclass VoiceAssessment extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            meetups: []\r\n        }\r\n    }\r\n    componentWillMount() {\r\n\r\n        this.getVoiceQuiz();\r\n    }\r\n    getVoiceQuiz() {\r\n\r\n        axios.get('http://localhost:3000/api/voice/').then(response => {\r\n            this.setState({ meetups: response.data }, () => {\r\n            });\r\n        })\r\n    }\r\n    render() {\r\n        const meetupItems = this.state.meetups.map((meetup, i) => {\r\n            return (<VoiceAssessmentItem key={meetup.id}\r\n                item={meetup} />)\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <h1>Voice Assessment</h1>\r\n                <ul className=\"collection\">\r\n                    {meetupItems}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VoiceAssessment;\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Demo from './views/demo.jsx';\r\nclass VoiceQuizDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keywords: '',\r\n            correctAnswers: '',\r\n            correctAnswer: 0,\r\n            clickedAnswer: 0,\r\n            step: 0,\r\n            score: 0,\r\n            details: [],\r\n            questions: [{ \"question\": \"\", \"answers\": [], \"correct_answer\": \"\", \"id\": 2 }],\r\n            question: '',\r\n            check: 1,\r\n            length: '',\r\n            showLoader: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getQuiz();\r\n        sessionStorage.removeItem('score');\r\n\r\n        // console.log(this.state.question)\r\n    }\r\n    getQuiz() {\r\n        let quizId = this.props.match.params.id;\r\n        axios.get(`http://localhost:3000/api/voice/${quizId}`).then(response => {\r\n            // console.log(response.data);\r\n            this.setState({\r\n                details: response.data,\r\n                quiestions: this.state.details.questions,\r\n                questions: response.data.questions,\r\n                question: this.state.questions.question,\r\n                length: response.data.questions.length,\r\n                check: 0\r\n            }, () => {\r\n                // console.log(this.state);\r\n                //console.log(this.state.questions);\r\n                this.setQuestion();\r\n            });\r\n        })\r\n\r\n\r\n    }\r\n    setQuestion() {\r\n        // this.state.question=this.state.questions[this.state.step].question;\r\n        //this.state.correctAnswers=this.state.questions[this.state.step].correct_answer-1;\r\n        this.setState({\r\n            question: this.state.questions[this.state.step].question,\r\n            correctAnswers: this.state.questions[this.state.step].correct_answer - 1\r\n        });\r\n        console.log(this.state.correctAnswers);\r\n        this.setState({\r\n            showLoader: false\r\n        })\r\n    }\r\n\r\n\r\n    getMeetup() {\r\n        let quizId = this.props.match.params.id;\r\n        axios.get(`http://localhost:3000/api/voice/${quizId}`).then(response => {\r\n            console.log(response.data);\r\n            this.setState({ details: response.data, questions: response.data.questions }, () => {\r\n                console.log(this.state);\r\n                console.log('after set state')\r\n            });\r\n        })\r\n    }\r\n    onDelete() {\r\n        let meetupId = this.state.details.id;\r\n        axios.delete(`http://localhost:3000/meetups/${meetupId}`)\r\n            .then(response => {\r\n                this.props.history.push('/')\r\n            }).catch(err => console.log(err))\r\n    }\r\n    checkAnswer = answer => {\r\n        const { correctAnswers, step, score } = this.state;\r\n\r\n        console.log('step' + step)\r\n\r\n        this.state.correctAnswers = this.state.questions[step].correct_answer - 1;\r\n        console.log(this.state.questions[step])\r\n        console.log(answer)\r\n        console.log(correctAnswers)\r\n        if (answer === this.state.correctAnswers) {\r\n            console.log('correct');\r\n            this.setState({\r\n                score: score + 1,\r\n                correctAnswer: correctAnswers,\r\n                clickedAnswer: answer\r\n            });\r\n        } else {\r\n            console.log('wrong')\r\n            this.setState({\r\n                correctAnswer: 0,\r\n                clickedAnswer: answer\r\n            });\r\n        }\r\n    }\r\n\r\n    // method to move to the next question\r\n    nextStep = (step) => {\r\n        this.setState({\r\n            step: step + 1,\r\n            correctAnswer: 0,\r\n            clickedAnswer: 0,\r\n\r\n        });\r\n        const sum = sessionStorage.getItem('sum');\r\n        const score = sessionStorage.getItem('score');\r\n        console.log('sum in quiz' + sum)\r\n        console.log('score in quiz' + score)\r\n        if(!isNaN(sum)&&!isNaN(score))\r\n        sessionStorage.setItem('score', Number(sum) + Number(score))\r\n        sessionStorage.removeItem('sum')\r\n        console.log('new score' + sessionStorage.getItem('score'))\r\n    }\r\n    onClose = () => {\r\n        window.opener = null;\r\n        window.open(\"\", \"_self\");\r\n        window.close();\r\n    };\r\n\r\n    render() {\r\n\r\n        let { questions, step, score } = this.state;\r\n\r\n\r\n        // console.log(temp.answers);\r\n        console.log(this.state.questions);\r\n        return (\r\n            <div className=\"Content\">\r\n                <h1 className=\"blue-text text-darken-2\">Oral Assessment</h1>\r\n                <h1 className=\"blue-text text-darken-2\">{this.state.details.name}</h1>\r\n                {this.state.showLoader && <div id=\"loader\" className=\"container1\"></div>}\r\n                {!this.state.showLoader && < div className=\"Content\" >\r\n                    {step < Object.keys(questions).length ?\r\n                        (<>\r\n                            <div id=\"hud\">\r\n                                <div id=\"hud-item\">\r\n                                    <p id=\"progressText\" className=\"hud-prefix\">\r\n                                        Question {step + 1}/{this.state.length}\r\n                                    </p>\r\n\r\n                                    <div id=\"progressBar\">\r\n                                        <div id=\"progressBarFull\" style={{ width: (step + 1) / this.state.length * 100 + \"%\" }}></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div id=\"hud-item\">\r\n                                    <p className=\"hud-prefix\">\r\n                                        Score\r\n            </p>\r\n                                    <h1 className=\"hud-main-text green-text\" id=\"score\" >\r\n                                        {sessionStorage.getItem('score') === null ? 0 : sessionStorage.getItem('score')}\r\n                                    </h1>\r\n                                </div>\r\n                            </div>\r\n                            <br></br>\r\n                            <Demo datal={this.state.questions[step]} />\r\n                            <button\r\n                                className=\"NextStep\"\r\n\r\n                                onClick={() => this.nextStep(step)\r\n\r\n                                }>Next</button>\r\n                        </>) : (\r\n                            <div className=\"finalPage\">\r\n                                <h1>You have completed the quiz!</h1>\r\n                                <p>Your score is: {Math.round(sessionStorage.getItem('score') * 100) / 100} of {Object.keys(questions).length}</p>\r\n                                <p>Thank you!</p>\r\n                                <p>{Math.round(sessionStorage.getItem('score') * 100) / 100}</p>\r\n\r\n\r\n                                <br></br>\r\n                                <Link className=\"btn\" to={`/`} >\r\n                                    HOME   </Link>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>}\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default VoiceQuizDetails;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport '../App.css';\r\nimport Indexer from './array/indexer';\r\nimport Assessment from './Assessment';\r\nimport ExcelReader from './ExcelReader';\r\nimport FinalQuizAdd from './FinalQuizAdd';\r\nimport FinalQuizDetails from './FinalQuizDetails';\r\nimport Image from './Image';\r\nimport QuizDetails from './QuizDetails';\r\nimport VoiceIndexer from './voice/indexer';\r\nimport Demo from './voice/views/demo';\r\nimport VoiceAssessment from './voice/VoiceAssessment';\r\nimport VoiceQuizDetails from './voice/VoiceQuizDetails';\r\n\r\nconst Main = () => (\r\n    <main>\r\n        <Switch >\r\n            <Route exact path='/' component={Assessment} />\r\n            <Route exact path='/mcq/addAssessment' component={Indexer} />\r\n            <Route exact path='/voice/showAssessments' component={VoiceAssessment} />\r\n            <Route exact path='/voice/takeAssessment/:id' component={Demo} />\r\n            <Route exact path='/assessment' component={Demo} />\r\n            <Route exact path='/voice/addAssessment' component={VoiceIndexer} />\r\n            <Route exact path='/quiz/addAssessmentTemplate' component={ExcelReader} />\r\n\r\n            <Route exact path='/voice/showAssessment/:id' component={VoiceQuizDetails} />\r\n            <Route exact path='/quiz/getQuizDetail/:id' component={QuizDetails} />\r\n            <Route exact path='/quiz/getQuiz/:id' component={FinalQuizDetails} />\r\n            <Route exact path='/quiz/takeAssessment' component={Assessment} />\r\n            <Route exact path='/quiz/addAssessment' component={FinalQuizAdd} />\r\n            <Route exact path='/mcq/test' component={Image} />\r\n\r\n        </Switch>\r\n\r\n    </main>\r\n)\r\n\r\nexport default Main\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"blue darken-2\">\r\n                    <div className=\"nav-wrapper\">\r\n                        <a href=\"#\" color=\"white\" className=\"brand-logo\">Online Assessment</a>\r\n                        <a href=\"#\" data-target=\"main-menu\" className=\"sidenav-trigger\">\r\n                            <i className=\"fa fa-bars\"></i></a>\r\n                        <ul className=\"right hide-on-small-only\">\r\n                            <li><Link to='/quiz/addAssessmentTemplate'><i className=\"fa fa-hourglass\"> Add Quiz using Template</i></Link> </li>\r\n                            <li><Link to='/quiz/takeAssessment'><i className=\"fa fa-hourglass\"> Take Quiz</i></Link> </li>\r\n                            <li><Link to='/quiz/addAssessment'><i className=\"fa fa-plus-circle\"> Add Quiz</i></Link> </li>\r\n                            <li><Link to='/mcq/test'><i className=\"fa fa-plus-circle\"> Add MCQ test</i></Link></li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                </nav>\r\n\r\n\r\n                <ul className=\"sidenav\" id=\"main-menu\">\r\n                    <li><a href=\"sass.html\">Sass</a></li>\r\n                    <li><a href=\"badges.html\">Components</a></li>\r\n                    <li><a href=\"collapsible.html\">JavaScript</a></li>\r\n                </ul>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\nimport './App.css';\nimport Main from './components/Main';\nimport Navbar from './components/Navbar';\nconst App = () => (\n  <div>\n    <Navbar />\n    <div className=\"container\">\n      <Main />\n    </div>\n\n  </div>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config({ silent: true });\n\n\nReactDOM.render(\n <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}